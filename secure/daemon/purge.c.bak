/*  A daemon to purge non logging players.
 * Initial attempt : 18 Sept 1997
 * Duuktsaryth
 */
#include <lib.h>
#include <dirs.h>
#include <daemons.h>
#define PURGE_TIME ( 90 * 86400) /* 86400 == length of 1 day in seconds */
inherit LIB_DAEMON;

string *eventGet(string);
void eventPostal();
int eventClean();
void eventInform();
private int LoginTime, Level, Retired;
private string Class, CapName;

static void create() {
  daemon::create();
  SetNoClean(1);
  call_out( (: eventInform :), 30);
 }

int eventClean() {
  string sapname;
  int sapnamelength;
  int num_purged = 0;
  string *dirs, *losers;
  string file;
  dirs = ({ });
  losers = ({ });
  dirs = eventGet(DIR_PLAYERS + "/");
  log_file("players/purge", ctime(time()) + "\n");
  foreach(string path in dirs) {
    losers = eventGet(DIR_PLAYERS + "/" + path + "/");
    foreach(string sap in losers) {
  sapnamelength = sizeof(sap);
  sapname = sap[0..(sapnamelength-3)];
  unguarded( (: restore_object, DIR_PLAYERS + "/" + path + "/" +
                 sapname :) );
      if (( time() - LoginTime) > PURGE_TIME &&
           !Retired) {
  log_file("players/purge",
    "Purged " + sapname + " reason: Last on " + ctime(LoginTime) +".\n"
    );
  file = (DIR_PLAYERS + "/" + path + "/" + sap);
  unguarded( (: rm, file :) );
        num_purged++;
        }
      }
    }

  eventPostal();
  CHAT_D->eventSendChannel("Purge Daemon",
      "reports", "The purge daemon purged " + num_purged + " players.");
  call_out( (: eventInform :), 172800);
  return num_purged;
 }

string *eventGet(string args) {
  string *dir_files = ({ });
  dir_files = unguarded( (: get_dir, args :) );
  return dir_files;
 }

void eventInform() {
  CHAT_D->eventSendChannel("Purge Daemon",
      "reports", "The Purge Daemon will run in 15 minutes.");
  call_out( (: eventClean :), 900);
 }

void eventPostal() {
  string *dir_letters, *players;
  string *target_files;
  dir_letters = unguarded( (: get_dir, "/secure/save/postal/" :) );
  foreach(string letter in dir_letters) {
    players = unguarded( (: get_dir, "/secure/save/postal/" + letter + "/" :) );
    foreach(string person in players) {
     if (!user_exists(person)) {
        target_files = unguarded( (: get_dir, 
                 "secure/save/postal/" + letter + "/" + person + "/" :) );
        foreach(string thing in target_files) {
            unguarded( (: rm, 
                 "/secure/save/postal/" + letter + "/" + person + "/" + thing :));
              }
          unguarded( (: rmdir, "/secure/save/postal/" + letter + "/" + person :));
           }
        }
      }
  }
