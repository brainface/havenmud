//  Trigger command, so we don't have to keep buzzing by Duuk
//  Laoise, 2005

#include <lib.h>
#include <daemons.h>
#include <dirs.h>

inherit LIB_DAEMON;
int SecondUndead();
int SecondDemon();
int ThirdDemon();
int SecondOrc();

mixed cmd(string str) {
  object invasion;
  string file;

  if(!archp(previous_object())) {
    this_player()->eventPrint("You have to be a Admin to start mischief like that.");
    return 1;
  }
  if(!str) {
    this_player()->eventPrint("Trigger what?");
    return 1;
  }
  if(str == "haven demon") {
    object demons = new(DIR_INVASIONS + "/haven_demon/demon_inv");
    INVASION_D->eventRegisterInvasion(demons, this_player());
  return 1;
  }
  if (str == "haven pirates") {
    object pirates = new(DIR_INVASIONS + "/haven_pirate/pir_inv");
    INVASION_D->eventRegisterInvasion(pirates, this_player());
  return 1;
  }
  if(str == "haven undead") {
    object undead = new(DIR_INVASIONS + "/haven_undead/undead_inv");
    INVASION_D->eventRegisterInvasion(undead, this_player());
    call_out((: SecondUndead :), 150);
  return 1;
  }
  if(str == "jidoor lizardmen") {
    object lizardmen = new(DIR_INVASIONS + "/jidoor_lizardmen/lmij_inv");
    INVASION_D->eventRegisterInvasion(lizardmen, this_player());
  return 1;
  }
  if(str == "jidoor orcs") {
    object orcs = new(DIR_INVASIONS + "/jidoor_orcs/orc_inv");
    INVASION_D->eventRegisterInvasion(orcs, this_player());
    call_out((: SecondOrc :), 150);
  return 1;
  }
  if(str == "jidoor templar") {
    object templars = new(DIR_INVASIONS + "/jidoor_templar/templar_inv");
    INVASION_D->eventRegisterInvasion(templars, this_player());
  return 1;
  }
  if(str == "parva bandit") {
    object bandits = new(DIR_INVASIONS + "/parva_bandit/bandit_inv");
    INVASION_D->eventRegisterInvasion(bandits, this_player());
  return 1;
  }
  if(str == "parva pirate") {
    object pirates = new(DIR_INVASIONS + "/parva_pirate/parva_pir_inv");
    INVASION_D->eventRegisterInvasion(pirates, this_player());
  return 1;
  }
  if(str == "parva templar") {
    object templars = new(DIR_INVASIONS + "/parva_templar/templar_inv");
    INVASION_D->eventRegisterInvasion(templars, this_player());
  return 1;
  }
  if(str == "sanctum bandit") {
    object bandits = new(DIR_INVASIONS + "/bandit/bandit_inv");
    INVASION_D->eventRegisterInvasion(bandits, this_player());
  return 1;
  }
  if(str == "shire lizardmen") {
    object lizardmen = new(DIR_INVASIONS + "/lizardman/lizardman_inv");
    INVASION_D->eventRegisterInvasion(lizardmen, this_player());
  return 1;
  }
  if(str == "soleil demon") {
    object demon = new(DIR_INVASIONS + "/soleil_demon/dem_1_inv");
    INVASION_D->eventRegisterInvasion(demon, this_player());
    call_out((: SecondDemon :), 150);
  return 1;
  }
  if(str == "soleil goblin") {
    object goblin = new(DIR_INVASIONS + "/soleil_goblin/goblin_inv");
    INVASION_D->eventRegisterInvasion(goblin, this_player());
  return 1;
  }
  if(str == "soleil ogre") {
    object ogre = new(DIR_INVASIONS + "/soleil_ogre/ogre_inv");
    INVASION_D->eventRegisterInvasion(ogre, this_player());
  return 1;
  }
}

int SecondWave() {
  object undead = new(DIR_INVASIONS + "/undead/undead_2_inv");
  INVASION_D->eventRegisterInvasion(undead, this_player());
return 1;
}

int SecondDemon() {
  object demon = new(DIR_INVASIONS + "/soleil_demon/dem_2_inv");
  INVASION_D->eventRegisterInvasion(demon, this_player());
  call_out((: ThirdDemon :), 100);
return 1;
}

int ThirdDemon() {
  object demon = new(DIR_INVASIONS + "/soleil_demon/dem_3_inv");
  INVASION_D->eventRegisterInvasion(demon, this_player());
return 1;
}

int SecondOrc() {
  object orc = new(DIR_INVASIONS + "/jidoor_orcs/orc_2_inv");
  INVASION_D->eventRegisterInvasion(orc, this_player());
return 1;
}

string GetHelp(string blah) {
  return "Syntax: <trigger [invasion]>\n\n"
    "Starts an invasion, for example <trigger haven demon>. The invasions currently avaliable, "
    "listed in the syntax combination that will trigger them, are:\n"
    "Invaded city - Invader Options:\n"
    "Haven - Demon, Pirate or Undead\n"
    "Jidoor - Lizardmen, Orcs, Templar\n"
    "Parva - Bandit, Pirate, Templar\n"
    "Sanctum - Bandit\n"
    "Shire - Lizardmen\n"
    "Soleil - Demon, Goblin or Ogre\n";
}
