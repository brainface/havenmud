/* Religion morality limits */
#include <lib.h>
#include <daemons.h>
inherit LIB_DAEMON;

mapping ReligionAlignment = ([
  "agnostic"  : "neutral" ,
  "Aberach"   : "evil" ,
  "Aetarin"   : "neutral" ,
  "Anteky"    : "good" ,
  "Damhair"   : "neutral" ,
  "Eclat"     : "good" ,
  "Enniae"    : "evil" ,
  "Kuthar"    : "neutral" ,
  "Kylin"     : "good" ,
  "Magildan"  : "neutral" , 
  "Rath Cult" : "evil" ,
  "Saahagoth" : "evil" ,
  "Soirin"    : "evil" ,
  "Taisoka"   : "neutral" ,
  "Thorian"   : "neutral", 
  "Urgesh"    : "evil",
  "Tulu Cult" : "evil",
  ]);
  
int CheckMorality(object who) {
  int upper, lower;
  int mine;
  switch(ReligionAlignment[who->GetReligion()]) {
    case "good" :
      upper = 9999;
      lower = 1000;
      break;
    case "neutral":
      upper = 1500;
      lower = -1500;
      break;
    case "evil":
      upper = -1000;
      lower = -9999;
      break;
    default:  /* This exists only for non-set religions */
      debug("Called for religion: " + who->GetReligion() + " for " + base_name(who));
      upper = 0;
      lower = 0;
      break;
  }
  mine = who->GetMorality();
  if (who->GetTestChar()) debug("m : " + mine + " u: " + upper + " l: " + lower);
  if (mine > upper) { if (who->GetTestChar()) debug(1); return 1; }
  if (mine < lower) { if (who->GetTestChar()) debug(2); return 2; }
  if (who->GetTestChar()) debug(1); return 0;
}

void SetBaseMorality(object who) {
  switch(ReligionAlignment[who->GetReligion()]) {
    case "good" :
      who->SetMorality(1500);
      break;
    case "evil" :
      who->SetMorality(-1500);
      break;
    }
  return;
}

void SetNPCMorality(object npc) {
  string religion = SETUP_D->GetReligion(npc->GetTown());
  switch(ReligionAlignment[religion]) {
    case "good" :
      npc->SetMorality(150);
      break;
    case "evil" :
      npc->SetMorality(-150);
      break;
    }
  return;
}

string GetReligionAlignment(string religion) {
  return ReligionAlignment[religion];
}

string GetStringRange(string religion) {
  int upper, lower;
  switch(ReligionAlignment[religion]) {
    case "good" :
      upper = 3000;
      lower = 1000;
      break;
    case "neutral":
      upper = 1000;
      lower = -1000;
      break;
    case "evil":
      upper = -1000;
      lower = -3000;
      break;
  }
  return lower + " to " + upper;
}
