varargs string GetLong(string str) {
mapping counts
string item

str = GetShort() + "
"
if (GetExternalDesc() != "$N is nondescript.") {
//RawDesc is ExternalDesc with $N interpreted.
str += GetExternalDesc() + "
"
} else {
//autogenerated description
str += DESCRIPTION_D->GetLong(this_object()) + "
"
}

// I don't even know if living possesses a GetLong. >_>
str += living::GetLong(nominative(this_object()))

// damned if I know anything with "GetAffectLong"
foreach(item in map(all_inventory(),
(: (string)$1->GetAffectLong(this_object()) :))) {
if( item ) str += item + "
"
}
counts = ([])

// I altered this to only include worn inventory.
foreach(item in map(
filter(all_inventory(),
(: !((int)$1->GetInvis(this_object())) && ((int)$1->GetWorn()) :)),
(: (string)$1->GetEquippedShort() :))) {
if( item ) counts[item]++
}
if( sizeof(counts) ) str += GetCapName() + " is wearing:
"
foreach(item in keys(counts)) {
str += capitalize(consolidate(counts[item], item)) + "
"
}
//TODO: add first shield
return str
}

