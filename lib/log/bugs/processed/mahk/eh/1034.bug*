Reported by: Atherton (aaronbd@live.com)
Time       : Thu Oct 20 02:22:13 2011
Type       : unexplained behaviour
Location   : ^GV/~v/gurovrd/-21,0
Status     : NEW
Bug        : > l farmer
This is a local farmer.
The male human is in top condition.
Farmer is carrying:
A shovel (wielded in right hand)
A potato

> steal potato from farmer
That is not present on the target.
> 
Seems like I can't steal ta 2nd thing from a similar target.  I stole a potato from a different farmer, but cannot steal from this one.

I have also noticed this when someone has 2 of something.  I can steal the first thing, but I cannot recognize that the second thing is there.  Meaning I cannot even attempt to take the second thing.

## there is a ton of wrong with ordinal targets in general. This 'might' be fixed by forcing some
verbs to use filter(target_inventory) or something similar as opposed to trying to pull from the
entire environment
-Mel 2014-2-26

// MAHHHHK
Looked at the code. It looks like whoever wrote steal code, like:
The codes in living.c (so it's in the creature stolen from). It is passed an object. Like, the /parser/ gives it an object. It will apparently pick objects in the stealer inventory before the stealees. ANd the code's written assuming that's just no the case and that the stealer can feed information to the parser on junk in the target's inventory. What I'm saying is, this shit ain't simple.
-Mahk
**


I think what must be done is removing "can/do_steal_obj_from_person" and changing it to "can/do_steal_word_from_person", then manually coding junk for getting the object from the person. There may be some other kludgy workarounds.
I.e. "if object is not on person, is there an object with the same name on the person? Oh, okay, get THAT."
I think this may be simplest and easiest to code.


OKOAY: here's what I did.
In the indirect_steal_obj_from_liv block in living, I commented out the 
"is this object held by target" check, because that check just did
not work right. There is a PREVIOUS check in the steal verb, that apepars
so far to always work right, and prevents you for instance from stealing
things that YOU hold from random npcs. It may need a bit more testing
to make sure it's not fubar?
