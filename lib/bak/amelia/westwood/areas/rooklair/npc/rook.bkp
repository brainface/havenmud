/*  
 *  Rook
 *  A silver dragon for the WestWood region
 *  Good aligned, aid to the good in times of trouble
 *  Started by Gaby 08/31/99 with tons of help from
 *  most of the staff
 *  Finished by Gaby 09/03/99
 *  Code altered again for various reasons 09/30/99
 *  Modified to remove cleric class and spells and
 *  Eclat as religion 10/05/99
 */
#define FRIENDS ({ "bugger", "pfria" }) 
#include <lib.h>
#include <daemons.h>
#include <damage_types.h>
#include "../rook.h"

inherit LIB_SENTIENT;
inherit LIB_FEAR;

void PossibleAttack();
void eventRook();
void eventBreatheL(object target);
void eventBreatheG();
void eventBuffet();
void eventBite(object target);
void eventTailStrike(object target);
void eventTailSwipe();
int CheckEncounter(string args);

static void create() 
{
  sentient::create();
  SetKeyName("Rook, the silver dragon of Kailie");
  SetId( ({ "dragon", "rook" }) );
  SetShort("a gargantuan silver dragon");
  SetLong("This huge dragon that stands here is known as Rook.  She is gargantuan "
    "in size and has silvery scales covering her entire body.  There is a set of "
    "large, curved horns on her head with smaller horns scattered around them.  "
    "Small horns also run down the length of her back to the tip of her tail which"
    " is spiked with horns the size of longswords.  Her eyes reveal a high level "
    "of intelligence and power as well as age beyond that of any mortal being.  "
    "She has a set of large wings tucked in tight to her body at the moment, but "
    "they appear large enough to easily move this gargantuan creature through the "
    "air at breakneck speeds.");
  SetAdjectives( ({ "silver" }) );
  SetRace("dragon");
  SetGender("female");
  SetMorality(2000);
  SetClass("cavalier");
  SetLevel(120);
  SetSkill("pierce defense", 200, 1);
  SetSkill("slash defense", 200, 1);
  SetSkill("melee attack", 200, 1);
  SetSkill("pierce attack", 200, 1);
  SetSkill("blunt attack", 200, 1);
  SetSkill("slash attack", 200, 1);
  SetLanguage("Eltherian", 100);
  SetMeleeAttackString("claws");
  SetMeleeDamageType(PIERCE);
  SetFearType("%^WHITE%^DRAGONFEAR%^RESET%^");
  SetFearLength(30 + random(30));
  SetResistLevel(175);
  SetAction(10, (: PossibleAttack :) );
  SetEncounter( (:CheckEncounter:) );
  SetCombatAction(60, (: eventRook :) );
  SetResistance(SLASH,"med");
  SetResistance(BLUNT,"med");
  SetResistance(PIERCE,"med");
  SetResistance(MAGIC,"med");
  SetResistance(ACID,"med");
  SetResistance(COLD,"med");
  SetResistance(HEAT,"med");
  SetResistance(GAS,"immune");
  SetResistance(SHOCK,"immune");
  AddFood(-2400);
}

void eventEnemyDied(object who) 
{
  eventForce("eat corpse");
  sentient::eventEnemyDied(who);
}

void init() 
{
  sentient::init();
  fear::init();
}

varargs int eventDie(object agent)
{
  object horn;
  object inv;
  horn = new(R_OBJ + "horn");
  horn->eventMove(this_object());
  horn = new(R_OBJ + "horn");
  horn->eventMove(this_object());
  agent->AddTitle("the LightsBane, Harbinger of Evil");
  agent->AddRepPoints(300);
  inv = new("/domains/westwood/invasions/demon/dem_scout_inv");
  INVASION_D->eventRegisterInvasion(inv, agent);
  return sentient::eventDie(agent);
}

int CheckEncounter(string arg)
{
  object visitor;
  eventForce("guard northwest");
    
  visitor = previous_object();
  if( present("feather",visitor)  ||
    present("dark cloak",visitor)  ||
    present("stick",visitor) )
  {
    eventBite(visitor);
    return 1;
  }
  return 0;
}

void PossibleAttack() 
{
  object *people;
  people = filter(all_inventory(environment()), (: living :));
  people -= ({ this_object() });
  foreach(object thing in people) 
  {
    if (member_array(thing->GetKeyName(), FRIENDS) != -1) 
    {
    people -= ({ thing });
    }
    if (thing->GetReligion() == "Eclat") 
    {
      people -= ({ thing });
    }
  }
  foreach(object thing in people) 
  {
    eventForce("attack " + thing->GetKeyName());
  }
  return;
}

void eventRook() 
{
  int rook = random(9);
  object dragon = this_player();
  object target = GetCurrentEnemy();

  switch(rook) 
  {
    case 0:
      eventBuffet();
    break;
    case 1..3:
      dragon->eventBite(target);
    break;
    case 4:
      dragon->eventBreatheG();
    break;
    case 5:
      dragon->eventBreatheL(target);
    break;
    case 6..7:
      dragon->eventTailStrike(target);
    break;
    case 8:
      eventTailSwipe();
    break;
  }
}

void eventBreatheL(object target)
{
  int sp = GetStaminaPoints();

  if (sp > 100) 
  {
    this_object()->AddStaminaPoints(-100);
    send_messages("breath", 
      "%^WHITE%^Rook $agent_verb a long streak of white lighting at "
      "$target_name!%^RESET%^", this_object(), target, environment());
    target->eventReceiveDamage(this_object(), SHOCK, GetHealthPoints(), 0);
    return;
  }
  else 
  {
    return;
  }
}

void eventBreatheG() 
{
  int sp = GetStaminaPoints();

  if (sp > 80) 
  {
    this_object()->AddStaminaPoints(-80);
    send_messages("breath", 
      "%^YELLOW%^Rook $agent_verb out a long billowing cloud of gas that "
      "quickly fills the room!%^RESET%^",this_object(), 0, environment());
    environment()->AddPoisonGas(250);
    return;
  }
  else 
  {
    return;
  }
}

void eventTailStrike(object target) 
{
  int damage = (GetHealthPoints()/10);
  int health = target->GetHealthPoints();
  int sp = GetStaminaPoints();

  if (sp > 65) 
  {
    this_object()->AddStaminaPoints(-65);
    if(damage > health) 
    {
      send_messages( ({"swing","strike"}),
        "%^ORANGE%^Rook $agent_verb $agent_possessive tail over "
        "$agent_possessive head and $agent_verb $target_name, impaling "
        "$target_possessive body!%^RESET%^", this_object(), target, environment());
      target->eventReceiveDamage(this_object(), PIERCE, damage, 0);
      return;
    }
    else 
    {
      send_messages( ({"swing","strike"}),
        "%^ORANGE%^Rook $agent_verb $agent_possessive tail over "
        "$agent_possessive head and $agent_verb $target_name!%^RESET%^", 
        this_object(), target, environment());
      target->eventReceiveDamage(this_object(), PIERCE, damage, 0);
      return;
    }
  }
  else 
  {
    return;
  }
}

void eventTailSwipe()
{
  int damage = (GetHealthPoints()/25);
  int sp = GetStaminaPoints();
  string *target;
  target = filter(all_inventory(environment())-({this_object()}),(: living :));

  if (sp > 45) 
  {
    this_object()->AddStaminaPoints(-45);
    send_messages("swing",
      "%^ORANGE%^Rook $agent_verb $agent_possessive tail around $agent_possessive"
      " body in a sweeping arc!%^RESET%^", this_object(), target, environment());
    target->eventCollapse();
    target->eventReceiveDamage(target, PIERCE, damage, 0);
    return;
  }
  else 
  {
    return;
  }
}

void eventBuffet()
{
  int sp = GetStaminaPoints();
  string *target;
  target = filter(all_inventory(environment())-({this_object()}),(: living :));

  if (sp > 75) 
  {
    this_object()->AddStaminaPoints(-75);
    send_messages("buffet", "%^BLUE%^Rook reers up on her hind legs, flaps her "
      "wings, and $agent_verb you with wind!%^RESET%^", this_object(), 0, environment());
    target->eventCollapse();
    return;
  }
  else 
  {
    return;
  }
}

void eventBite(object target) 
{
  string limb = target->GetRandomLimb("torso");
  int damage = GetHealthPoints();
  int limb_hp = target->GetLimb(limb)["health"];
  string *exits;  
  string NewLoc;
  if(environment() != environment(target)) return;
  damage /= 2;
  if(damage > limb_hp && limb != "head" && limb != "torso") 
  {
    send_messages("sever",
        "%^RED%^Rook $agent_verb $target_possessive_noun " 
        + limb + " with $agent_possessive viscious bite!%^RESET%^",
        this_object(), target, environment());
        target->RemoveLimb(limb);
    if(present("limb", environment(target)))
      present("limb", environment(target))->eventDestruct();
      return;
  }
  else if(damage > limb_hp && limb == "head") 
  {
    send_messages("bite",
        "%^CYAN%^Rook $agent_verb $target_possessive_noun "
        + limb + " off in one vicious bite killing $target_name "
        "instantly!%^RESET%^", this_object(), target, environment());
      target->RemoveLimb(limb);
    if(present("limb", environment(target)))
      present("limb", environment(target))->eventDestruct();
    return;
  }
  else if(damage > limb_hp && limb == "torso") 
  {
    send_messages( ({"pick","throw"}),
        "%^CYAN%^Rook $agent_verb $target_name up in $agent_possessive "
        "massive jaw and thrashes about viciously, then $agent_verb $target_name "
        "away from the battle!%^RESET%^", this_object(), target, environment());
        target->RemoveLimb(limb);
    exits = (string *)environment(target)->GetExits();
    NewLoc = exits[ random(sizeof(exits)) ];
    NewLoc = environment(target)->GetExit(NewLoc);
    target->eventMove(NewLoc);
    if(present("limb", environment(target)))
      present("limb", environment(target))->eventDestruct();
      return;
  }
  else 
  {
    send_messages( ({ "attempt", "succeed" }),
      "%^RED%^Rook $agent_verb to bite $target_name but $agent_verb only in "
      "doing massive damage to $target_possessive_noun " + limb + ".%^RESET%^",
      this_object(), target, environment());
      target->eventReceiveDamage(target, PIERCE, damage, 0, limb);
      target->eventCollapse();
    return;
  }
}
